/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import com.draculatheme.jetbrains.DraculaMeta;
import com.formdev.flatlaf.IntelliJTheme;
import controller.MRPController;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DBConnection;
import model.DBDelete;
import model.DBSearch;
import model.Product_planning_data_model;

/**
 *
 * @author EACMS
 */
public class Product_Planing_Screen extends javax.swing.JFrame {

    /**
     * Creates new form Product_Planing_Screen
     */
    String produtData[][] = new String[9][3];
    int x = 0;
    ArrayList<Product_planning_data_model> material_arr_list = new ArrayList<Product_planning_data_model>();

    public Product_Planing_Screen() {
        initComponents();
        loading_Product_IDs();
        loading_material_IDs();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
    }

    private void loading_Product_IDs() {
        String nextOrderID = "";
        try {
            ResultSet result = new DBSearch().getProductDetails();
            int a = 0;
            while (result.next()) {
                a = result.getInt(1);
                nextOrderID = String.valueOf(a);
                this.product_id.addItem(nextOrderID);
            }
            DBConnection.closeCon();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void loading_material_IDs() {
        String nextOrderID = "";
        try {
            ResultSet result = new DBSearch().getMaterialDetails();
            int a = 0;
            while (result.next()) {
                a = result.getInt(1);
                nextOrderID = String.valueOf(a);
                this.material_id.addItem(nextOrderID);
            }
            DBConnection.closeCon();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        material_id = new javax.swing.JComboBox<>();
        cancelBTN = new javax.swing.JButton();
        material_name = new javax.swing.JLabel();
        addBTN = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        material_qty = new javax.swing.JTextField();
        saveBTN = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        selectedProductTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        product_id = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        product_name_field = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        material_name2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        material_id.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        material_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                material_idActionPerformed(evt);
            }
        });

        cancelBTN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelBTN.setText("Cancel");
        cancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTNActionPerformed(evt);
            }
        });

        material_name.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        material_name.setText("Material Name");

        addBTN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addBTN.setText("Add Material");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Material Quntity    :");

        material_qty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        saveBTN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveBTN.setText("Save");
        saveBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBTNActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Material ID       :");

        selectedProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material ID", "Material Name", "Quantity(Kg)"
            }
        ));
        jScrollPane1.setViewportView(selectedProductTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 32)); // NOI18N
        jLabel1.setText("Plan Product Materials");

        product_id.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        product_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_idActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Product ID       :");

        product_name_field.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        product_name_field.setText("Product Name");

        material_name2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        material_name2.setText("Kg");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 431, Short.MAX_VALUE)
                        .addComponent(saveBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(cancelBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(material_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(addBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(material_name2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(material_id, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(product_id, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(material_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(product_name_field, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(201, 201, 201))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(product_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(product_name_field))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBTN)
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelBTN)
                            .addComponent(saveBTN))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(material_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(material_name))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(material_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(material_name2))
                        .addContainerGap(328, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTNActionPerformed
        this.dispose();
        MRP_Home_Screen mRP_Home_Screen = new MRP_Home_Screen();
        mRP_Home_Screen.setVisible(true);
    }//GEN-LAST:event_cancelBTNActionPerformed

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        //add material button
        if (this.material_qty.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please Enter the Quantity");
        } else {
            String Data[] = {this.material_id.getSelectedItem().toString(), material_name.getText(), this.material_qty.getText()};
            produtData[x][0] = this.material_id.getSelectedItem().toString();
            produtData[x][1] = material_name.getText();
            produtData[x][2] = this.material_qty.getText();
            DefaultTableModel tableModel = (DefaultTableModel) this.selectedProductTable.getModel();
            tableModel.addRow(Data);
            x++;

            // add data to arraylist
            material_arr_list.add(new Product_planning_data_model(product_id.getSelectedItem().toString(), this.material_id.getSelectedItem().toString(), this.material_qty.getText().toString()));
            System.out.println(product_id.getSelectedItem().toString() + this.material_id.getSelectedItem().toString() + this.material_qty.getText());

            clearFields();
        }

    }//GEN-LAST:event_addBTNActionPerformed

    private void clearFields() {
        this.material_qty.setText("");
    }

    private void saveBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBTNActionPerformed

        //delete all materials from product planning table
        try {
            new DBDelete().delete_all_materials_according_to_productId(this.product_id.getSelectedItem());
//            System.out.println("materials deleted !");

            // insert new data
            for (Product_planning_data_model product_data_model : material_arr_list) {
                MRPController.insert_Materials_to_product(product_data_model.product_id, product_data_model.material_id, product_data_model.qty);
            }

            JOptionPane.showMessageDialog(this, "Material details updated Successfully!!");

        } catch (Exception e) {
            System.out.println(e.toString());
        }

        // update and save to database
//        for (Product_planning_data_model product : material_arr_list) {
//            System.out.println("full array : " + product.qty);
//        }
    }//GEN-LAST:event_saveBTNActionPerformed

    private void product_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_idActionPerformed
//remove all data from arraylist

        material_arr_list.removeAll(material_arr_list);
//set product Name
        try {
            ResultSet result = new DBSearch().searchSelectedProductID(this.product_id.getSelectedItem());
            while (result.next()) {
                this.product_name_field.setText(result.getString(2));
            }
            DBConnection.closeCon();
        } catch (Exception e) {
            System.out.println(e.toString());
        }

        //get material details if any
        try {
            ResultSet result = new DBSearch().get_material_details_from_product_id(this.product_id.getSelectedItem());
            DefaultTableModel model = (DefaultTableModel) selectedProductTable.getModel();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            while (result.next()) {
                Object[] row = {result.getString(2), result.getString(3), result.getString(4)};
                model.addRow(row);
                //add to the arraylist
                material_arr_list.add(new Product_planning_data_model(result.getString(1), result.getString(2), result.getString(4)));

            }
            DBConnection.closeCon();

            for (Product_planning_data_model prod : material_arr_list) {
                System.out.println("arr list : " + prod.material_id);
            }
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }


    }//GEN-LAST:event_product_idActionPerformed

    private void material_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_material_idActionPerformed
        //set material Name
        try {
            ResultSet result = new DBSearch().get_maaterial_name_from_id(this.material_id.getSelectedItem());
            while (result.next()) {
                this.material_name.setText(result.getString(2));
//                System.out.println(result.getString(2));
            }
            DBConnection.closeCon();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_material_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product_Planing_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product_Planing_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product_Planing_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product_Planing_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            IntelliJTheme.setup(DraculaMeta.class.getResourceAsStream("/themes/Dracula.theme.json"));
        } catch (Exception e) {
            e.printStackTrace();
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product_Planing_Screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JButton cancelBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> material_id;
    private javax.swing.JLabel material_name;
    private javax.swing.JLabel material_name2;
    private javax.swing.JTextField material_qty;
    private javax.swing.JComboBox<String> product_id;
    private javax.swing.JLabel product_name_field;
    private javax.swing.JButton saveBTN;
    private javax.swing.JTable selectedProductTable;
    // End of variables declaration//GEN-END:variables
}
